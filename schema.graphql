type Colony @entity {
  id: ID! # Address
  ensName: String
  orbitAddress: String
  colonyChainId: BigInt!
  token: Token
  domains: [Domain!]!
  metadata: String
  metadataHistory: [ColonyMetadata!]! @derivedFrom(field: "colony")
  extensions: [ColonyExtension!] @derivedFrom(field: "colony")
}

type ColonyMetadata @entity {
  id: ID! # colonyAddress_transactionHash_logId
  colony: Colony!
  transaction: Transaction!
  metadata: String
}

type Domain @entity {
  id: ID! # colonyAddress_domain_domainId
  domainChainId: BigInt!
  parent: Domain
  name: String
  colonyAddress: String
  metadata: String
  metadataHistory: [DomainMetadata!]! @derivedFrom(field: "domain")
}

type DomainMetadata @entity {
  id: ID! # colonyAddress_domainId_transactionHash_logId
  domain: Domain!
  transaction: Transaction!
  metadata: String
}

type Payment @entity {
  id: ID!
  domain: Domain
  colony: Colony
  to: String
  fundingPot: FundingPot
  paymentChainId: BigInt
}

type Expenditure @entity {
  id: ID!
}

type OneTxPayment @entity {
  id: ID!
  fundamentalChainId: BigInt
  nPayouts: BigInt
  agent: String
  transaction: Transaction
  expenditure: Expenditure
  payment: Payment
}

type Token @entity {
  id: ID!
  decimals: BigInt
  symbol: String
}

type FundingPot @entity {
  id: ID!
  fundingPotPayouts: [FundingPotPayout!]!
}

type FundingPotPayout @entity {
  id: ID!
  token: Token
  amount: BigInt
  fundingPotChainId: BigInt
}

type Transaction @entity {
  id: ID!
  block: Block
}

type Block @entity {
  id: ID!
  timestamp: BigInt
}

type Event @entity {
  id: ID!
  transaction: Transaction
  address: String
  associatedColony: Colony
  name: String
  args: String
}

type ColonyExtension @entity {
  id: ID! # colonyAddress_extensionId_transactionHash_logId
  address: String!
  colony: Colony!
  hash: String!
}

type Motion @entity {
  id: ID! # colonyAddress_motion_extensionAddress_motionId
  fundamentalChainId: BigInt
  extensionAddress: String
  associatedColony: Colony
  transaction: Transaction
  agent: String
  domain: Domain
  currentStake: BigInt
  requiredStake: BigInt
  escalated: Boolean
}
